diff --git a/config.def.h b/config.def.h
index 6d3135e..10e8e04 100644
--- a/config.def.h
+++ b/config.def.h
@@ -5,6 +5,7 @@ static char *scriptfile     = "~/.surf/script.js";
 static char *styledir       = "~/.surf/styles/";
 static char *cachedir       = "~/.surf/cache/";
 static char *cookiefile     = "~/.surf/cookies.txt";
+static char *historyfile    = "~/.surf/history";
 
 /* Webkit default features */
 static Parameter defconfig[ParameterLast] = {
@@ -58,7 +59,7 @@ static WebKitFindOptions findopts = WEBKIT_FIND_OPTIONS_CASE_INSENSITIVE |
 /* DOWNLOAD(URI, referer) */
 #define DOWNLOAD(d, r) { \
         .v = (const char *[]){ "/bin/sh", "-c", \
-             "st -e /bin/sh -c \"curl -g -L -J -O --user-agent '$1'" \
+             "st -e /bin/sh -c \"pwd ; curl -g -L -J -O --user-agent '$1'" \
              " --referer '$2' -b $3 -c $3 '$0';" \
              " sleep 5;\"", \
              d, useragent, r, cookiefile, NULL \
@@ -93,6 +94,7 @@ static SiteStyle styles[] = {
 };
 
 #define MODKEY GDK_CONTROL_MASK
+#define ALTKEY GDK_MOD1_MASK
 
 /* hotkeys */
 /*
@@ -101,28 +103,24 @@ static SiteStyle styles[] = {
  */
 static Key keys[] = {
 	/* modifier              keyval          function    arg */
-	{ MODKEY,                GDK_KEY_g,      spawn,      SETPROP("_SURF_URI", "_SURF_GO") },
-	{ MODKEY,                GDK_KEY_f,      spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
-	{ MODKEY,                GDK_KEY_slash,  spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
-
 	{ 0,                     GDK_KEY_Escape, stop,       { 0 } },
-	{ MODKEY,                GDK_KEY_c,      stop,       { 0 } },
+	{ MODKEY,                GDK_KEY_g,      stop,       { 0 } },
 
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_r,      reload,     { .b = 1 } },
 	{ MODKEY,                GDK_KEY_r,      reload,     { .b = 0 } },
 
-	{ MODKEY,                GDK_KEY_l,      navigate,   { .i = +1 } },
-	{ MODKEY,                GDK_KEY_h,      navigate,   { .i = -1 } },
+	{ MODKEY,                GDK_KEY_f,      navigate,   { .i = +1 } },
+	{ MODKEY,                GDK_KEY_b,      navigate,   { .i = -1 } },
 
 	/* Currently we have to use scrolling steps that WebKit2GTK+ gives us
 	 * d: step down, u: step up, r: step right, l:step left
 	 * D: page down, U: page up */
-	{ MODKEY,                GDK_KEY_j,      scroll,     { .i = 'd' } },
-	{ MODKEY,                GDK_KEY_k,      scroll,     { .i = 'u' } },
-	{ MODKEY,                GDK_KEY_b,      scroll,     { .i = 'U' } },
-	{ MODKEY,                GDK_KEY_space,  scroll,     { .i = 'D' } },
-	{ MODKEY,                GDK_KEY_i,      scroll,     { .i = 'r' } },
-	{ MODKEY,                GDK_KEY_u,      scroll,     { .i = 'l' } },
+	{ MODKEY,                GDK_KEY_n,      scroll,     { .i = 'd' } },
+	{ MODKEY,                GDK_KEY_p,      scroll,     { .i = 'u' } },
+	{ MODKEY,                GDK_KEY_v,      scroll,     { .i = 'U' } },
+	{ ALTKEY,                GDK_KEY_v,      scroll,     { .i = 'D' } },
+	{ ALTKEY|GDK_SHIFT_MASK, GDK_KEY_less,   scroll,     { .i = 't' } },
+	{ ALTKEY|GDK_SHIFT_MASK, GDK_KEY_greater,scroll,     { .i = 'b' } },
 
 
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_j,      zoom,       { .i = -1 } },
@@ -131,11 +129,8 @@ static Key keys[] = {
 	{ MODKEY,                GDK_KEY_minus,  zoom,       { .i = -1 } },
 	{ MODKEY,                GDK_KEY_plus,   zoom,       { .i = +1 } },
 
-	{ MODKEY,                GDK_KEY_p,      clipboard,  { .b = 1 } },
-	{ MODKEY,                GDK_KEY_y,      clipboard,  { .b = 0 } },
-
-	{ MODKEY,                GDK_KEY_n,      find,       { .i = +1 } },
-	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_n,      find,       { .i = -1 } },
+	{ MODKEY,                GDK_KEY_y,      clipboard,  { .b = 1 } },
+	{ MODKEY,                GDK_KEY_w,      clipboard,  { .b = 0 } },
 
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_p,      print,      { 0 } },
 
@@ -148,7 +143,6 @@ static Key keys[] = {
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_g,      toggle,     { .i = Geolocation } },
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_s,      toggle,     { .i = JavaScript } },
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_i,      toggle,     { .i = LoadImages } },
-	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_v,      toggle,     { .i = Plugins } },
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_b,      toggle,     { .i = ScrollBars } },
 	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_m,      toggle,     { .i = Style } },
 };
@@ -160,7 +154,5 @@ static Button buttons[] = {
 	{ OnLink,       0,              2,      clicknewwindow, { .b = 0 },     1 },
 	{ OnLink,       MODKEY,         2,      clicknewwindow, { .b = 1 },     1 },
 	{ OnLink,       MODKEY,         1,      clicknewwindow, { .b = 1 },     1 },
-	{ OnAny,        0,              8,      clicknavigate,  { .i = -1 },    1 },
-	{ OnAny,        0,              9,      clicknavigate,  { .i = +1 },    1 },
 	{ OnMedia,      MODKEY,         1,      clickexternplayer, { 0 },       1 },
 };
diff --git a/surf.c b/surf.c
index 93a1629..4abacd1 100644
--- a/surf.c
+++ b/surf.c
@@ -30,7 +30,7 @@
 #include "arg.h"
 
 #define LENGTH(x)               (sizeof(x) / sizeof(x[0]))
-#define CLEANMASK(mask)         (mask & (MODKEY|GDK_SHIFT_MASK))
+#define CLEANMASK(mask)         (mask & (ALTKEY|MODKEY|GDK_SHIFT_MASK))
 #define SETB(p, s)              [p] = { { .b = s }, }
 #define SETI(p, s)              [p] = { { .i = s }, }
 #define SETV(p, s)              [p] = { { .v = s }, }
@@ -289,6 +289,7 @@ setup(void)
 	cookiefile = buildfile(cookiefile);
 	scriptfile = buildfile(scriptfile);
 	cachedir   = buildpath(cachedir);
+	historyfile = buildfile(historyfile);
 
 	gdkkb = gdk_seat_get_keyboard(gdk_display_get_default_seat(gdpy));
 
@@ -903,6 +904,7 @@ cleanup(void)
 	g_free(scriptfile);
 	g_free(stylefile);
 	g_free(cachedir);
+	g_free(historyfile);
 	XCloseDisplay(dpy);
 }
 
@@ -1221,6 +1223,10 @@ void
 loadchanged(WebKitWebView *v, WebKitLoadEvent e, Client *c)
 {
 	const char *title = geturi(c);
+	FILE *history;
+	char timebuffer[30];
+	struct tm *tm_info;
+	time_t timer;
 
 	switch (e) {
 	case WEBKIT_LOAD_STARTED:
@@ -1247,6 +1253,16 @@ loadchanged(WebKitWebView *v, WebKitLoadEvent e, Client *c)
 		evalscript(c, "document.documentElement.style.overflow = '%s'",
 		    enablescrollbars ? "auto" : "hidden");
 		*/
+		time(&timer);
+		tm_info = localtime(&timer);
+		history = fopen(historyfile, "a+");
+		strftime(timebuffer, 30, "%Y-%m-%d %H:%M:%S", tm_info);
+		fputs(timebuffer, history);
+		fputs(" ", history);
+		fputs(geturi(c), history);
+		fputs("\n", history);
+		fclose(history);
+
 		runscript(c);
 		break;
 	}
@@ -1543,6 +1559,11 @@ scroll(Client *c, const Arg *a)
 	case 'u':
 		ev->key.keyval = GDK_KEY_Up;
 		break;
+	 case 't':
+		ev->key.keyval = GDK_KEY_Home;
+		break;
+	 case 'b':
+		ev->key.keyval = GDK_KEY_End;
 	}
 
 	gdk_event_put(ev);
@@ -1612,12 +1633,17 @@ find(Client *c, const Arg *a)
 		s = getatom(c, AtomFind);
 		f = webkit_find_controller_get_search_text(c->finder);
 
-		if (g_strcmp0(f, s) == 0) /* reset search */
+		if (g_strcmp0("!!INCREMENTAL_SEARCH_NEXT!!", s) == 0) {
+		  webkit_find_controller_search_next(c->finder);
+		} else if(g_strcmp0("!!INCREMENTAL_SEARCH_PREVIOUS!!", s) == 0) {
+		  webkit_find_controller_search_previous(c->finder);
+		} else if (g_strcmp0(f, s) == 0) /* reset search */
 			webkit_find_controller_search(c->finder, "", findopts,
 			                              G_MAXUINT);
 
-		webkit_find_controller_search(c->finder, s, findopts,
-		                              G_MAXUINT);
+		else
+		  webkit_find_controller_search(c->finder, s, findopts,
+		                                G_MAXUINT);
 
 		if (strcmp(s, "") == 0)
 			webkit_find_controller_search_finish(c->finder);
